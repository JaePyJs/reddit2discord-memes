#!/bin/bash

# Pre-commit hook to check for sensitive information

# Patterns to check for
PATTERNS=(
  "DISCORD_TOKEN=[a-zA-Z0-9_\.\-]+"
  "OPENROUTER_API_KEY=[a-zA-Z0-9_\.\-]+"
  "SPOTIFY_CLIENT_SECRET=[a-zA-Z0-9_\.\-]+"
  "TENOR_API_KEY=[a-zA-Z0-9_\.\-]+"
  "OPENWEATHERMAP_API_KEY=[a-zA-Z0-9_\.\-]+"
  "api_key"
  "apikey"
  "secret"
  "password"
  "token"
)

# Files to exclude from checking
EXCLUDED_FILES=(
  ".gitignore"
  ".env.example"
  "pre-commit"
  "README.md"
  "docs/API_SETUP.md"
  "docs/SECURITY.md"
  "scripts/check_secrets.py"
  "scripts/pre-commit"
  "tests/"  # Exclude test files which use dummy API keys
)

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only)

# Flag to track if sensitive information was found
SENSITIVE_INFO_FOUND=false

# Check each staged file
for FILE in $STAGED_FILES; do
  # Skip excluded files
  SKIP=false
  for EXCLUDED in "${EXCLUDED_FILES[@]}"; do
    if [[ "$FILE" == *"$EXCLUDED"* ]]; then
      SKIP=true
      break
    fi
  done

  if $SKIP; then
    continue
  fi

  # Check for sensitive patterns
  for PATTERN in "${PATTERNS[@]}"; do
    MATCHES=$(git diff --cached -U0 "$FILE" | grep -E "$PATTERN")
    if [[ ! -z "$MATCHES" ]]; then
      echo "WARNING: Possible sensitive information found in $FILE:"
      echo "$MATCHES"
      SENSITIVE_INFO_FOUND=true
    fi
  done
done

# If sensitive information was found, abort the commit
if $SENSITIVE_INFO_FOUND; then
  echo "ERROR: Commit aborted due to sensitive information in staged files."
  echo "Please remove the sensitive information and try again."
  echo "If this is a false positive, you can bypass this check with git commit --no-verify"
  exit 1
fi

# Run the Python check_secrets.py script if it exists
if [ -f "scripts/check_secrets.py" ]; then
  python scripts/check_secrets.py
  if [ $? -ne 0 ]; then
    echo "ERROR: check_secrets.py found potential leaked secrets."
    echo "Please fix these issues before committing."
    echo "If this is a false positive, you can bypass this check with git commit --no-verify"
    exit 1
  fi
fi

exit 0
